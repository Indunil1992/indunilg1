{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "852d7f46-b0b1-4a41-b47e-312d85b3b748": {
        "id": "852d7f46-b0b1-4a41-b47e-312d85b3b748",
        "parent": null,
        "name": "indunilg1",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "f26021ff-0772-4954-99d1-ff5267819177",
          "36975a97-c098-4c59-9141-8c1c0083af92"
        ],
        "isRemovable": false,
        "filePath": "indunilg1"
      },
      "f26021ff-0772-4954-99d1-ff5267819177": {
        "id": "f26021ff-0772-4954-99d1-ff5267819177",
        "parent": "852d7f46-b0b1-4a41-b47e-312d85b3b748",
        "name": "function.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "indunilg1/function.js",
        "code": "let AWS = require('aws-sdk');\nlet SL_AWS = require('slappforge-sdk-aws');\nconst sqs = new SL_AWS.SQS(AWS);\nlet google = require('googleapis').google;\nlet _auth = require('./Authorizer');\nconst pubsub = google.pubsub('v1');\n\nexports.handler = function (request, response) {\n    pubsub.projects.topics.subscriptions.list({\n        topic: `projects/${process.env.GCP_PROJECT}/topics/cloud-builds`,\n        pageSize: 10\n    })\n        .then(response => {\n            console.log(response.data);  // successful response\n            /*\n            response.data = {\n                \"subscriptions\": [\n                    \"projects/<project>/subscriptions/<subscription-1>\",\n                    \"projects/<project>/subscriptions/<subscription-2>\",\n                    ...\n                ]\n            }\n            */\n        })\n        .catch(err => {\n            console.log(err, err.stack); // an error occurred\n            sqs.receiveMessage({\n                QueueUrl: `https://sqs.${process.env.AWS_REGION}.amazonaws.com/${process.env.SIGMA_AWS_ACC_ID}/KTestSQS`,\n                AttributeNames: ['All'],\n                MaxNumberOfMessages: '1',\n                VisibilityTimeout: '30',\n                WaitTimeSeconds: '0'\n            }).promise()\n                .then(receivedMsgData => {\n                    if (!!(receivedMsgData) && !!(receivedMsgData.Messages)) {\n                        let receivedMessages = receivedMsgData.Messages;\n                        receivedMessages.forEach(message => {\n                            // your logic to access each message through out the loop. Each message is available under variable message \n                            // within this block\n                        });\n                    } else {\n                        // No messages to process\n                    }\n                })\n                .catch(err => {\n                    // error handling goes here\n                });\n        });\n\n    response.send({ \"message\": \"Successfully executed\" });\n}",
        "config": {
          "runtime": "nodejs8",
          "timeout": 60,
          "memory": 128,
          "triggerType": 0,
          "handler": "handler"
        },
        "triggers": [
          {
            "resourceName": "scheduler-trigger",
            "config": {
              "type": "",
              "schedulePattern": "* * * * *",
              "jobId": "1",
              "timezone": "UTC"
            }
          }
        ]
      },
      "948b44c1-08e6-4718-a724-ba2307741413": {
        "id": "948b44c1-08e6-4718-a724-ba2307741413",
        "parent": null,
        "name": "index.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": false,
        "filePath": "index.js",
        "code": "// This file is used to register all your cloud functions in GCP.\n// DO NOT EDIT/DELETE THIS, UNLESS YOU KNOW WHAT YOU ARE DOING.\n\nexports.indunilg1function = require(\"./indunilg1/function.js\").handler;"
      },
      "42ca3c25-9284-4faf-a0b2-47863afc825b": {
        "id": "42ca3c25-9284-4faf-a0b2-47863afc825b",
        "parent": null,
        "name": "main.py",
        "type": "PYTHON_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": false,
        "filePath": "main.py",
        "code": "# This file is used to register all your cloud functions in GCP.\n# DO NOT EDIT/DELETE THIS, UNLESS YOU KNOW WHAT YOU ARE DOING.\n\n"
      },
      "36975a97-c098-4c59-9141-8c1c0083af92": {
        "id": "36975a97-c098-4c59-9141-8c1c0083af92",
        "parent": "852d7f46-b0b1-4a41-b47e-312d85b3b748",
        "name": "Authorizer.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "indunilg1/Authorizer.js",
        "code": "const google = require(\"googleapis\").google;\n\ngoogle.options({auth: new google.auth.Compute()});"
      }
    },
    "deletedFiles": [],
    "rootNode": "852d7f46-b0b1-4a41-b47e-312d85b3b748",
    "openFiles": [
      "f26021ff-0772-4954-99d1-ff5267819177"
    ],
    "currentFileId": "f26021ff-0772-4954-99d1-ff5267819177",
    "resources": {
      "pubsubcloudBuilds": {
        "name": "pubsubcloudBuilds",
        "type": "pubsub",
        "config": {
          "mode": 1,
          "topic": {
            "name": "cloud-builds",
            "subscriptions": []
          }
        }
      },
      "scheduler-trigger": {
        "name": "scheduler-trigger",
        "type": "scheduler-trigger",
        "config": {}
      },
      "sqsKTestSQS": {
        "name": "sqsKTestSQS",
        "type": "SQS",
        "config": {
          "mode": 1,
          "existing": true,
          "name": "KTestSQS",
          "url": "https://sqs.us-east-1.amazonaws.com/318300609668/KTestSQS",
          "selectedRegion": "us-east-1",
          "deliveryDelay": "0",
          "deliveryDelayUnit": "seconds",
          "queueType": "standardQueue",
          "defaultVisibilityTimeout": "30",
          "defaultVisibilityTimeoutUnit": "seconds",
          "messageRetentionPeriod": "345600",
          "messageRetentionPeriodUnit": "seconds",
          "maximumMessageSize": 256,
          "receiveMessageWaitTime": "0",
          "queueARN": "arn:aws:sqs:us-east-1:318300609668:KTestSQS"
        }
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": null
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "AWS_REGION",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      },
      {
        "lambdaId": "all",
        "varKey": "AWS_ACCESS_KEY_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      },
      {
        "lambdaId": "all",
        "varKey": "AWS_SECRET_ACCESS_KEY",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      },
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "googleapis": {
          "name": "googleapis",
          "language": "javascript",
          "version": "29.0.0",
          "dev": false,
          "notRemovable": false
        },
        "aws-sdk": {
          "name": "aws-sdk",
          "language": "javascript",
          "version": "2.176.0",
          "dev": false,
          "notRemovable": false
        },
        "slappforge-sdk-aws": {
          "name": "slappforge-sdk-aws",
          "language": "javascript",
          "version": "0.0.5",
          "dev": false,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "indunilg1",
    "projectDescription": "",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east1",
    "platform": "GCP",
    "platformRegions": {
      "AWS": "us-east-1"
    },
    "lastSave": 1567073341239
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "indunilg1",
      "url": "https://github.com/Indunil1992/indunilg1"
    }
  }
}